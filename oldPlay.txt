callback: async (client, interaction)=> {
        if (!interaction.member.voice.channel) {
            interaction.reply({
                content: "Join a voice channel first.",
                ephemeral: true,
            });
            return;
        }

        // const connection = joinVoiceChannel({
        //     channelId: interaction.member.voice.channel.id,
        //     guildId: interaction.guild.id,
        //     adapterCreator: interaction.guild.voiceAdapterCreator,
        // });
        // console.log('Joined channel');

        // const songLink = interaction.options.data[0].value;

        // try {
        // const info = await ytdl.getInfo(songLink);
        // console.log(info);
        
        // const stream = ytdl(songLink, {
        //         filter: 'audioonly',
        //         quality: 'highestaudio',
        //         highWaterMark: 1 << 25,
        //         dlChunkSize: 0,
        //     });

        // const audioResource = createAudioResource(stream);

        // const audioPlayer = createAudioPlayer();

        // connection.subscribe(audioPlayer);
        // audioPlayer.play(audioResource);

        // audioPlayer.on(AudioPlayerStatus.Playing, () => {
        //     console.log(`Playing link: ${songLink}`);
        //     interaction.reply({
        //         content: "Playing Audio!",
        //     });
        // });

        // audioPlayer.on('error', (error) => {
        //     console.error('Audio player error:', error);
        //     interaction.reply({
        //         content: 'There was an error playing the audio.',
        //         ephemeral: true,
        //     });
        // });

        // audioPlayer.on(AudioPlayerStatus.Idle, () => {
        //     console.log('Audio has finished playing');
        //     connection.destroy(); // Leave the voice channel when done
        // });

        // } catch (error) {
        //     console.error('Error with YouTube stream:', error);
        //     interaction.reply({
        //         content: 'Failed to load or play the song.',
        //         ephemeral: true,
        // });
        // }
        // Create a play queue for the server
		const queue = await client.player.createQueue(interaction.guild);

        // Wait until you are connected to the channel
		if (!queue.connection) await queue.connect(interaction.member.voice.channel)

		let embed = new MessageEmbed()
        let url = interaction.options.getString("url")
        
        // Search for the song using the discord-player
        const result = await client.player.search(url, {
            requestedBy: interaction.user,
            searchEngine: QueryType.YOUTUBE_VIDEO
        })

        // finish if no tracks were found
        if (result.tracks.length === 0)
            return interaction.reply("No results")

        // Add the track to the queue
        const song = result.tracks[0]
        await queue.addTrack(song)
        embed
            .setDescription(`**[${song.title}](${song.url})** has been added to the Queue`)
            .setThumbnail(song.thumbnail)
            .setFooter({ text: `Duration: ${song.duration}`})
    },